>> # Simple distilation column test
>> units SI
>> $thermo = Sim21Thermo.Peng-Robinson
pkgName: Peng-Robinson
>> / -> $thermo
Thermo case attached to a unit operation. / to /thermo
>> thermo + PROPANE n-BUTANE ISOBUTANE n-PENTANE
PROPANE n-BUTANE ISOBUTANE n-PENTANE 
>> 
>> col = Tower.Tower()
>> col.Stage_0 + 20  # twenty two stages`
>> 
>> cd col.Stage_10
/col.Stage_10
>> f = Tower.Feed()
>> f.Port.T = 30
>> f.Port.P = 720
>> f.Port.MoleFlow = 10
>> f.Port.Fraction = .4 .05 .4 .15
>> f.Port
Port: /col.Feed_10_f + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = 0.0 = 
T                  = 30.0 * C
P                  = 720.0 * kPa
MoleFlow           = 10.0 * kgmole/h
MassFlow           = 546.15555 = kg/h
VolumeFlow         = 0.9655645670839446 = m3/hr
StdLiqVolumeFlow   = 0.93999 = m3/hr
H                  = -143034.62168443223 = kJ/kmol
Energy             = -397318.39356786734 = W
MolecularWeight    = 54.615555 = 
ZFactor            = 0.027581765327025335 = 
PROPANE            = 0.4 * 
N-BUTANE           = 0.05 * 
ISOBUTANE          = 0.4 * 
N-PENTANE          = 0.15 * 

>> 
>> cd ../Stage_0
/col.Stage_0
>> l = Tower.LiquidDraw()
>> l.Port.P = 700
>> 
>> l.Port.MoleFlow = 5
>> 
>> cond = Tower.EnergyFeed(0)
>> 
>> reflux = Tower.StageSpecification('Reflux')
>> reflux.Value = 1
>> 
>> cd ../Stage_21
/col.Stage_21
>> l = Tower.LiquidDraw()
>> l.Port.P = 730
>> reb = Tower.EnergyFeed(1)
>> 
>> cd ..
/col
>> TryToSolve = 1  # start calculation
Calculating Jacobian for /col
Calculating disturbance 10 of 22 in jacobian of /col
Calculating disturbance 20 of 22 in jacobian of /col
/col Inner Error 0.024696
/col Inner Error 0.006493
/col Inner Error 0.003583
/col Inner Error 0.000234
/col Inner Error 0.000028
/col Inner Error 0.000003
Inner loop converged
/col Iteration 1 Outer Error 0.025855
/col Inner Error 0.049846
/col Inner Error 0.010900
/col Inner Error 0.002664
/col Inner Error 0.000327
/col Inner Error 0.000047
/col Inner Error 0.000003
Inner loop converged
/col Iteration 2 Outer Error 0.000785
/col Inner Error 0.000161
/col Inner Error 0.000012
/col Inner Error 0.000001
Inner loop converged
/col Iteration 3 Outer Error 0.000020
/col Inner Error 0.000033
/col Inner Error 0.000004
Inner loop converged
>> 
>> # since there was little output here, I will put some profile stuff here
>> L_MassFraction.PROPANE
[0.74446312 0.55360317 0.44350445 0.38719037 0.35981106 0.34657726
 0.33975443 0.33512546 0.32945929 0.31852442 0.29641693 0.25657221
 0.21198629 0.16677131 0.12514104 0.08999312 0.06237206 0.04183183
 0.02714126 0.01686636 0.00970107 0.00468537]
>> V_MoleFraction.ISOBUTANE
[0.09548787 0.20016277 0.28053153 0.32832986 0.35234813 0.36287961
 0.36653387 0.36660428 0.36410594 0.35805724 0.3450103  0.39397059
 0.45560384 0.52663154 0.60074449 0.6705551  0.73014574 0.77637452
 0.80823162 0.8244662  0.81850501 0.76576529]
>> L_MassFlow
[234.96724488 238.81273367 242.21884313 244.32917576 245.36655057
 245.71307538 245.53373836 244.64421047 242.31779264 237.16489621
 818.50698807 827.70915079 839.35086277 852.8392963  866.99855679
 880.44844549 892.07101709 901.19273737 907.25794254 908.81568754
 902.23733597 311.18830512]
>> L_Viscosity
[0.00012015 0.00012416 0.00012569 0.00012613 0.00012619 0.00012613
 0.00012603 0.00012596 0.00012598 0.00012622 0.00012681 0.00012656
 0.00012611 0.00012545 0.00012462 0.00012373 0.0001229  0.00012217
 0.00012154 0.00012096 0.00012028 0.00011898]
>> L_StdVolFraction.PROPANE
[0.73391005 0.54013649 0.43021538 0.37452954 0.34761713 0.33469258
 0.32812988 0.32385916 0.31891404 0.30957152 0.29055947 0.25096942
 0.2068635  0.16234658 0.12154832 0.08724533 0.06038115 0.04045904
 0.0262441  0.0163276  0.00943771 0.00462466]
>> V_StdVolFraction.PROPANE
[0.86891823 0.73391005 0.63573558 0.57852982 0.54900671 0.53463251
 0.52778293 0.5244765  0.52270719 0.52132332 0.51924338 0.46400861
 0.39725632 0.32388437 0.25101372 0.18539645 0.13117825 0.08937846
 0.05878452 0.03718476 0.02224491 0.0119166 ]
>> L_VolumeFlow
[0.43448938 0.4393693  0.44496491 0.44875186 0.45070365 0.45138802
 0.45104885 0.44925184 0.44443635 0.43360571 1.48669821 1.50521776
 1.52905065 1.55717734 1.58722823 1.61622624 1.64163138 1.66183106
 1.67550785 1.67945614 1.66559827 0.57245795]
>> L_StdLiqVolumeFlow
[0.40468775 0.41558983 0.4239673  0.42887051 0.43122216 0.43201083
 0.43166109 0.42983181 0.42503608 0.41432822 1.41776005 1.43674253
 1.46042695 1.48750273 1.51558933 1.54199675 1.5645899  1.58205387
 1.59309389 1.59399521 1.57465673 0.53530225]
>> V_StdLiqVolumeFlow
[7.56943643e-42 8.09375504e-01 8.20277581e-01 8.28655055e-01
 8.33558260e-01 8.35909913e-01 8.36698579e-01 8.36348843e-01
 8.34519564e-01 8.29723836e-01 8.19015977e-01 8.82457798e-01
 9.01440278e-01 9.25124706e-01 9.52200480e-01 9.80287084e-01
 1.00669450e+00 1.02928765e+00 1.04675162e+00 1.05779164e+00
 1.05869296e+00 1.03935448e+00]
>> 
>> 
>> #Now lets test efficiencies
>> Efficiencies
/col.Efficiencies = 1.0 
>> 
>> #Make sure it works for zero flow in vap
>> /col.Stage_0.v = Tower.VapourDraw()
>> /col.Stage_0.v.Port.MoleFlow = 0.0
/col Inner Error 0.000000
Inner loop converged
/col Iteration 1 Outer Error 0.000001
/col Inner Error 0.000001
Inner loop converged
>> 
>> Efficiencies = 0.9
/col Inner Error 0.000434
/col Inner Error 0.000077
/col Inner Error 0.000007
Inner loop converged
/col Iteration 1 Outer Error 0.000333
/col Inner Error 0.000147
/col Inner Error 0.000026
/col Inner Error 0.000005
Inner loop converged
/col Iteration 2 Outer Error 0.000009
/col Inner Error 0.000012
/col Inner Error 0.000002
Inner loop converged
>> V_MoleFraction.PROPANE
[0.90061892 0.79031759 0.71064513 0.65934913 0.63049623 0.61540085
 0.60774907 0.60386352 0.60176903 0.60037847 0.59916608 0.5504329
 0.48970444 0.41954975 0.34462593 0.27094501 0.20404718 0.14749314
 0.10243354 0.06812739 0.04279818 0.02436961]
>> 
>> 
>> 
>> Efficiencies = 0.5
/col Inner Error 0.008466
/col Inner Error 0.006230
/col Inner Error 0.000755
/col Inner Error 0.000255
/col Inner Error 0.000087
/col Inner Error 0.000028
/col Inner Error 0.000005
Inner loop converged
/col Iteration 1 Outer Error 0.003201
/col Inner Error 0.001057
/col Inner Error 0.000303
/col Inner Error 0.000112
/col Inner Error 0.000031
/col Inner Error 0.000010
/col Inner Error 0.000004
Inner loop converged
/col Iteration 2 Outer Error 0.000073
/col Inner Error 0.000123
/col Inner Error 0.000022
/col Inner Error 0.000004
Inner loop converged
>> V_MoleFraction.PROPANE
[0.88406767 0.76015793 0.70504724 0.66173381 0.63050294 0.60933025
 0.59552014 0.5866643  0.58094406 0.57710253 0.57447651 0.54262502
 0.50424337 0.46170335 0.41567226 0.36716384 0.3174726  0.26804407
 0.22030522 0.17549547 0.13452875 0.09736633]
>> 
>> Efficiencies = :0 .3 1 .5 2 .7 3-19 .5 20-21 .8
/col Inner Error 0.004330
/col Inner Error 0.000449
/col Inner Error 0.000188
/col Inner Error 0.000099
/col Inner Error 0.000015
/col Inner Error 0.000007
Inner loop converged
/col Iteration 1 Outer Error 0.000289
/col Inner Error 0.000293
/col Inner Error 0.000098
/col Inner Error 0.000028
/col Inner Error 0.000007
Inner loop converged
/col Iteration 2 Outer Error 0.000009
/col Inner Error 0.000010
/col Inner Error 0.000002
Inner loop converged
>> V_MoleFraction.PROPANE
[0.88566726 0.76304624 0.70832473 0.65373551 0.62601933 0.60744467
 0.59539381 0.58766515 0.58264216 0.57922297 0.57687641 0.54596117
 0.50867052 0.46727811 0.42239712 0.37497818 0.32625431 0.27762341
 0.23048823 0.18608805 0.1452166  0.09056476]
>> 
>> #Per compound
>> Efficiencies = :-2 .32 4 .18 8 .91 @PROPANE 0 .2 1 .4 2 .6 3-7 .7 @n-BUTANE 1 .3 4-5 .8 6- .4 @CARBON_DIOXIDE -3 .2 4 .6
/col Inner Error 0.008496
/col Inner Error 0.002548
/col Inner Error 0.001425
/col Inner Error 0.000644
/col Inner Error 0.000186
/col Inner Error 0.000064
/col Inner Error 0.000050
/col Inner Error 0.000019
/col Inner Error 0.000002
Inner loop converged
/col Iteration 1 Outer Error 0.001972
/col Inner Error 0.005597
/col Inner Error 0.000833
/col Inner Error 0.000094
/col Inner Error 0.000028
/col Inner Error 0.000007
Inner loop converged
/col Iteration 2 Outer Error 0.000044
/col Inner Error 0.000259
/col Inner Error 0.000030
/col Inner Error 0.000006
Inner loop converged
>> V_MoleFraction.PROPANE
[0.90194212 0.79252914 0.75755309 0.72327432 0.66915    0.65593117
 0.63268357 0.62049057 0.61413139 0.61041288 0.60796068 0.5579853
 0.49400356 0.4185901  0.3377196  0.25911979 0.18951307 0.13263903
 0.08906534 0.05723226 0.03467478 0.01882895]
>> 
>> #Switching compounds should not affect
>> $thermo.PROPANE >> n-PENTANE
/col Inner Error 0.189170
/col Inner Error 0.063053
/col Inner Error 0.057286
/col Inner Error 0.006809
/col Inner Error 0.001401
/col Inner Error 0.000478
/col Inner Error 0.000437
/col Inner Error 0.000203
/col Inner Error 0.000022
/col Inner Error 0.000006
Inner loop converged
/col Iteration 1 Outer Error 0.621286
/col Inner Error 0.155026
/col Inner Error 0.110776
/col Inner Error 0.097885
/col Inner Error 0.057253
/col Inner Error 0.016287
/col Inner Error 0.001695
/col Inner Error 0.000391
/col Inner Error 0.000292
/col Inner Error 0.000181
/col Inner Error 0.000126
/col Inner Error 0.000012
/col Inner Error 0.000008
Inner loop converged
/col Iteration 2 Outer Error 0.074424
/col Inner Error 0.093726
/col Inner Error 0.068722
/col Inner Error 0.022866
/col Inner Error 0.014009
/col Inner Error 0.000578
/col Inner Error 0.000224
/col Inner Error 0.000024
/col Inner Error 0.000014
/col Inner Error 0.000003
Inner loop converged
/col Iteration 3 Outer Error 0.001189
/col Inner Error 0.001272
/col Inner Error 0.000060
/col Inner Error 0.000020
/col Inner Error 0.000011
Inner loop is not changing significantly - exiting
/col Iteration 4 Outer Error 0.000012
Calculating Jacobian for /col
Calculating disturbance 10 of 22 in jacobian of /col
Calculating disturbance 20 of 22 in jacobian of /col
/col Inner Error 0.000001
Inner loop converged
>> Efficiencies = :-2 .32 4 .18 8 .91 @PROPANE 0 .2 1 .4 2 .6 3-7 .7 @n-BUTANE 1 .3 4-5 .8 6- .4 @CARBON_DIOXIDE -3 .2 4 .6
/col Inner Error 0.000000
Inner loop converged
/col Iteration 1 Outer Error 0.000001
/col Inner Error 0.000000
Inner loop converged
>> V_MoleFraction.PROPANE
[4.89999550e-01 2.99957864e-01 2.56359608e-01 2.28143049e-01
 2.12399962e-01 2.07617698e-01 2.05947636e-01 2.05582412e-01
 2.05471613e-01 2.05253652e-01 2.05084437e-01 1.22824126e-01
 7.06454221e-02 3.96306581e-02 2.18868453e-02 1.19538311e-02
 6.46008337e-03 3.44120276e-03 1.78810456e-03 8.86826944e-04
 4.03175201e-04 1.56167310e-04]
>> 
>> #Get rid of the generic efficiencies
>> Efficiencies = :@PROPANE 0 .2 1 .4 2 .6 3-7 .7 17 .9 18 .9 @n-BUTANE 1 .3 4-5 .8 6- .4 @CARBON_DIOXIDE -3 .2 4 .6
/col Inner Error 0.004892
/col Inner Error 0.001331
/col Inner Error 0.001304
/col Inner Error 0.000189
/col Inner Error 0.000176
/col Inner Error 0.000001
Inner loop converged
/col Iteration 1 Outer Error 0.000243
/col Inner Error 0.000097
/col Inner Error 0.000020
/col Inner Error 0.000001
Inner loop converged
/col Iteration 2 Outer Error 0.000003
/col Inner Error 0.000004
Inner loop converged
>> V_MoleFraction.PROPANE
[4.89421995e-01 2.99954541e-01 2.49205484e-01 2.21164093e-01
 2.09908144e-01 2.06102202e-01 2.04970921e-01 2.04797001e-01
 2.04926202e-01 2.04686880e-01 2.04454614e-01 1.22243982e-01
 7.01966183e-02 3.93154003e-02 2.16773825e-02 1.18190592e-02
 6.37486293e-03 3.38768865e-03 1.84543131e-03 9.62380013e-04
 4.36178963e-04 1.68434024e-04]
>> 
>> #Delete a compound
>> $thermo - ISOBUTANE
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> V_MoleFraction.PROPANE
[1.37980966e-04 6.91902500e-04 1.72337175e-03 3.66601946e-03
 7.18986640e-03 1.34081040e-02 2.39222067e-02 4.04785861e-02
 6.38899421e-02 9.26708580e-02 1.22671637e-01 1.32089127e-01
 1.38483232e-01 1.43131290e-01 1.47463564e-01 1.53285335e-01
 1.63555329e-01 1.83862694e-01 2.24559633e-01 3.02046630e-01
 4.32334214e-01 6.10830225e-01]
>> 
>> #Now play with removing and adding stages
>> Efficiencies = 1.0
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.Stage_10 - 2
Rename port /col.LiquidDraw_21_l to LiquidDraw_19_l.  It is connected to 
Rename port /col.EnergyFeed_21_reb to EnergyFeed_19_reb.  It is connected to 
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> Efficiencies
/col.Efficiencies = 1.0 
>> 
>> Efficiencies = :0 .9 1 .8 2 .9 3 .87 4 .98 5 .76 6 .9 7-14 .93 15- 1.0
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.Stage_13 - 2
The efficiencies matrix changed as a result of a change in configuration in /col
Rename port /col.LiquidDraw_19_l to LiquidDraw_17_l.  It is connected to 
Rename port /col.EnergyFeed_19_reb to EnergyFeed_17_reb.  It is connected to 
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> Efficiencies
/col.Efficiencies = :0 .9 1 .8 2 .9 3 .87 4 .98 5 .76 6 .9 7-13 .93 14- 1.0 
>> 
>> /col.Stage_3 - 2
The efficiencies matrix changed as a result of a change in configuration in /col
Rename port /col.Feed_10_f to Feed_8_f.  It is connected to 
Rename port /col.LiquidDraw_17_l to LiquidDraw_15_l.  It is connected to 
Rename port /col.EnergyFeed_17_reb to EnergyFeed_15_reb.  It is connected to 
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> Efficiencies
/col.Efficiencies = :0 .9 1 .8 2 .9 3 .87 4 .9 5-11 .93 12- 1.0 
>> 
>> #/col.Stage_3 + 2
>> #Efficiencies
>> 
>> 
>> Efficiencies = :-2 .32 4 .18 8 .91 @PROPANE 0 .2 1 .4 2 .6 3-7 .7 @n-BUTANE 1 .3 4-5 .8 6- .4 @CARBON_DIOXIDE -3 .2 4 .6
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.Stage_4 - 2
The efficiencies matrix changed as a result of a change in configuration in /col
Rename port /col.Feed_8_f to Feed_6_f.  It is connected to 
Rename port /col.LiquidDraw_15_l to LiquidDraw_13_l.  It is connected to 
Rename port /col.EnergyFeed_15_reb to EnergyFeed_13_reb.  It is connected to 
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> Efficiencies
/col.Efficiencies = :-2 .32 4 .18 6 .91 @PROPANE 0 .2 1 .4 2 .6 3-5 .7 @n-BUTANE 1 .3 4-4 .8 5- .4 @CARBON_DIOXIDE -3 .2 4 .6 
>> 
>> /col.Stage_0 - 2
The efficiencies matrix changed as a result of a change in configuration in /col
Rename port /col.Feed_6_f to Feed_4_f.  It is connected to 
Rename port /col.LiquidDraw_13_l to LiquidDraw_11_l.  It is connected to 
Rename port /col.EnergyFeed_13_reb to EnergyFeed_11_reb.  It is connected to 
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> Efficiencies
/col.Efficiencies = :-0 .32 2 .18 4 .91 @PROPANE 0 .2 1-3 .7 @n-BUTANE 2-2 .8 3- .4 @CARBON_DIOXIDE -1 .2 2 .6 
>> 
>> 
>> #Now lets play with the P_Profile object
>> Efficiencies = 1.0
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> TryToSolve = 0
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> 
>> /col.P_Profile.Values
[ ...
None
None
None
None
None
None
None
None
None
None
None
None
 ... ]

>> 
>> /col.LiquidDraw_0_l.P =
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.P_Profile.Values
[ ...
None
None
None
None
None
None
None
None
None
None
None
None
 ... ]

>> 
>> /col.P_Profile.Item0 = 700
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.LiquidDraw_0_l.P
/col.LiquidDraw_0_l.P= None
>> /col.P_Profile.Values
[ ...
700.0
None
None
None
None
None
None
None
None
None
None
None
 ... ]

>> 
>> TryToSolve = 1
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.LiquidDraw_0_l.P
/col.LiquidDraw_0_l.P= None
>> /col.P_Profile.Values
[ ...
700.0
None
None
None
None
None
None
None
None
None
None
None
 ... ]

>> 
>> TryToSolve = 0
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.P_Profile.Item4 = 701
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> TryToSolve = 1
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.LiquidDraw_0_l.P
/col.LiquidDraw_0_l.P= None
>> /col.P_Profile.Values
[ ...
700.0
None
None
None
701.0
None
None
None
None
None
None
None
 ... ]

>> 
>> /col.P_Profile.Item0 =
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> cd /col.Stage_2
/col.Stage_2
>> . + 2
Rename port /col.LiquidDraw_11_l to LiquidDraw_12_l.  It is connected to 
Rename port /col.EnergyFeed_11_reb to EnergyFeed_12_reb.  It is connected to 
Rename port /col.Feed_4_f to Feed_5_f.  It is connected to 
Rename port /col.LiquidDraw_12_l to LiquidDraw_13_l.  It is connected to 
Rename port /col.EnergyFeed_12_reb to EnergyFeed_13_reb.  It is connected to 
Rename port /col.Feed_5_f to Feed_6_f.  It is connected to 
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> cd /col
/col
>> /col.LiquidDraw_0_l.P
/col.LiquidDraw_0_l.P= None
>> /col.P_Profile.Values
[ ...
None
None
None
None
None
None
701.0
None
None
None
None
None
None
None
 ... ]

>> 
>> /col.LiquidDraw_13_l.P =
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.P_Profile.Item6 =
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.LiquidDraw_0_l.P
/col.LiquidDraw_0_l.P= None
>> /col.LiquidDraw_13_l.P
/col.LiquidDraw_13_l.P= None
>> /col.P_Profile.Values
[ ...
None
None
None
None
None
None
None
None
None
None
None
None
None
None
 ... ]

>> 
>> TryToSolve = 0
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.P_Profile.Item0 = 700
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.P_Profile.Item13 = 720
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> TryToSolve = 1
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.LiquidDraw_0_l.P
/col.LiquidDraw_0_l.P= None
>> /col.LiquidDraw_13_l.P
/col.LiquidDraw_13_l.P= None
>> /col.P_Profile.Values
[ ...
700.0
None
None
None
None
None
None
None
None
None
None
None
None
720.0
 ... ]

>> 
>> 
>> #Degrees of subcooling
>> /col.Stage_0.dsc = Tower.DegSubCooling()
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.Stage_0.l.Port
Port: /col.LiquidDraw_0_l + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 5.0 * kgmole/h
MassFlow           = nan = kg/h
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> /col.Stage_0.dsc.Port = 3
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.Stage_0.l.Port
Port: /col.LiquidDraw_0_l + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 5.0 * kgmole/h
MassFlow           = nan = kg/h
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> /col.Stage_0.v = Tower.VapourDraw()
Could not assign Tower.VapourDraw()
Error processing command:
<class 'sim21.cli.CommandInterface.CmdError'>
Could not assign Tower.VapourDraw()
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 389, in ProcessCommandString
    cmdResult = self.ProcessCommand(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 364, in ProcessCommand
    return operators[operator](self, lhsObj, dequote(remaining))

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 1996, in Equal
    raise CmdError('CMDCouldNotAssign', rhsDesc)


>> /col.Stage_0.v.MoleFlow = 0.0
Could not assign 0.0
Error processing command:
<class 'sim21.cli.CommandInterface.CmdError'>
Could not assign 0.0
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 389, in ProcessCommandString
    cmdResult = self.ProcessCommand(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 364, in ProcessCommand
    return operators[operator](self, lhsObj, dequote(remaining))

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 1814, in Equal
    self.CreateObject(parentObj, createName, rhsDesc)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 1687, in CreateObject
    raise CmdError('CMDCouldNotAssign', opTypeDesc)


>> /col.Stage_0.v.Port
Port: /col.VapourDraw_0_v + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 1e-40 * kgmole/h
MassFlow           = None
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> /col.Stage_0.dsc.Port = 0
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.Stage_0.v.Port
Port: /col.VapourDraw_0_v + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 1e-40 * kgmole/h
MassFlow           = None
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> /col.Stage_0.l.Port
Port: /col.LiquidDraw_0_l + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 5.0 * kgmole/h
MassFlow           = nan = kg/h
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> /col.Stage_0.dsc.Port = 2
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.Stage_0.v.Port
Port: /col.VapourDraw_0_v + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 1e-40 * kgmole/h
MassFlow           = None
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> /col.Stage_0.l.Port
Port: /col.LiquidDraw_0_l + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 5.0 * kgmole/h
MassFlow           = nan = kg/h
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> 
>> copy /col
Copied /col to the clipboard
>> paste /
Pasting /col
Pasted /col as /colClone
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> 
>> /col.LiquidDraw_0_l
Port: /col.LiquidDraw_0_l + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 5.0 * kgmole/h
MassFlow           = nan = kg/h
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> /colClone.LiquidDraw_0_l
Port: /colClone.LiquidDraw_0_l + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 5.0 * kgmole/h
MassFlow           = nan = kg/h
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> 
>> 
>> delete /col.Stage_0.dsc
Error processing command:
<class 'ZeroDivisionError'>
division by zero
  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 3599, in run
    interface.ProcessCommandStream(inp, out, err)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 294, in ProcessCommandStream
    cmdResult = self.ProcessCommandString(cmd)

  File "C:\Users\kpatv\Code\sim21\sim21\cli\CommandInterface.py", line 410, in ProcessCommandString
    self.root.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 336, in Solve
    self.InnerSolve()

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Flowsheet.py", line 405, in InnerSolve
    op.Solve()

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\Tower.py", line 4931, in Solve
    self.FlashAllPorts()  # make sure feeds are calculated

  File "C:\Users\kpatv\Code\sim21\sim21\unitop\UnitOperations.py", line 963, in FlashAllPorts
    nuFlashed += port.Flash(calcStatus)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1333, in Flash
    self.CalcFlows(calcStatus)  # just in case this can get H

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1583, in CalcFlows
    stdMolVol = self.GetLocalStdMolVol(isForgetting)

  File "C:\Users\kpatv\Code\sim21\sim21\solver\Ports.py", line 1471, in GetLocalStdMolVol
    molVol = thAdmin.GetProperties(prov, case, (P_VAR, 101.325), (T_VAR, refT), LIQUID_PHASE, x, [STDLIQVOL_VAR])[0]

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\ThermoAdmin.py", line 622, in GetProperties
    return self.thDict[provider].GetProperties(thName, prop1, prop2, phase, frac, propList)

  File "C:\Users\kpatv\Code\sim21\sim21\thermo\Sim21Thermo.py", line 1044, in GetProperties
    ph = hnd.phase(phase_temp, phase_press, phase_comp, desired_phase)

  File "C:\Users\kpatv\Code\sim21\sim21\provider\cubic.py", line 972, in phase
    results = calc_phase(self._eos_code, GAS_CONSTANT, temp, press, n, valid, desired_phase, allow_pseudo,


>> /col.Stage_0.v.Port
Port: /col.VapourDraw_0_v + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 1e-40 * kgmole/h
MassFlow           = None
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> /col.Stage_0.l.Port
Port: /col.LiquidDraw_0_l + sim21.solver.Ports.Port_Material
Connected to: None
VapFrac            = None
T                  = None
P                  = None
MoleFlow           = 5.0 * kgmole/h
MassFlow           = nan = kg/h
VolumeFlow         = None
StdLiqVolumeFlow   = None
H                  = None
Energy             = None
MolecularWeight    = None
ZFactor            = None
N-BUTANE           = nan * 
N-PENTANE          = nan * 
PROPANE            = nan * 

>> 
>> 
>> 
>> 
